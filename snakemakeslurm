#!/bin/bash

function help {
    echo "snakemakeslurm - submit this snakemake pipeline with slurm"
    echo ""
    echo "usage: snakemakeslurm [-h] [clean-scratch] [run]"
    echo ""
    echo "optionals:"
    echo "    run                       run pipeline"
    echo "    clean-scratch             clean scratch temporary files in each"
    echo "                              node and exit"
    echo "    -h, --help                show this help message and exit"
}

function clean_scratch {
    slurm_job_status_dir=slurm_job_status
    if [ ! "$(ls -A $slurm_job_status_dir)" ]
    then
        echo "no scratch usage record found"
        exit 0
    fi
    echo 'cleaning scratches...'
    for job in $(ls $slurm_job_status_dir)
    do
        hostname=$(cat $slurm_job_status_dir/$job)
        echo "$hostname $job"
        ssh $hostname rm -rf /scratch/$job
    done
    rm $slurm_job_status_dir/*
}

function main {
    SM_PARAMS="job-name partition mail-user mail-type output error time nodes mem exclude"
    SM_ARGS="--ntasks {threads} --mem-per-cpu {cluster.mem-per-cpu}"
    for P in ${SM_PARAMS}
    do
        SM_ARGS="$SM_ARGS --$P {cluster.$P}"
    done

    if [ -z "$USER_EMAIL" ]
    then
        echo "warning: USER_EMAIL is not set."
    fi

    args=""
    whitespace="[[:space:]]"
    for arg in "$@"
    do
        if [[ $arg =~ $whitespace ]]
        then
            arg=\""$arg"\"
        fi
        args="$args $arg"
    done

    mkdir -p slurmout

    call="srun \
            -N 1 -n 1 -t 14-0 --mail-user $USER_EMAIL --mail-type ALL \
            -o slurmout/snakemake_%A.log -e slurmout/snakemake_%A.err \
        snakemake \
            -j 999 \
            --latency-wait 60 \
            $args \
            --cluster-config $(dirname $0)/slurm_config.yml \
            --cluster \"sbatch $SM_ARGS\" \
        &"
    echo $call
    eval $call
}


if [ $# -eq 0 ]; then help; exit 1
else
    key="$1"
    case $key in
        -h|--help) help; exit ;;
        run) shift 1; main "$@"; exit ;;
        clean-scratch) clean_scratch; exit ;;
        *) echo "unknown option: $1" >&2; help; exit 1 ;;
    esac
fi
